{
  "AWSTemplateFormatVersion" : "2010-09-09",

"Description" : "Basic Network Stack- WGM.",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion host",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "AvailabilityZoneA" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion host",
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "ConstraintDescription" : "must be the name of an existing AWS zone."
    },

    "AvailabilityZoneB" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion host",
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "ConstraintDescription" : "must be the name of an existing AWS zone."
    },

    "AvailabilityZoneC" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion host",
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "ConstraintDescription" : "must be the name of an existing AWS zone."
    },

    "SSHLocation" : {
      "Description" : "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "Owner" : {
      "Description" : "Tag that will be used in tags and hostnames. ",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "20",
      "ConstraintDescription" : "between 2 and 20 characters"
    },

    "VPCName" : {
      "Description" : "Tag that will be used in tags and hostnames. ",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "20",
      "ConstraintDescription" : "between 2 and 20 characters"
    },

    "CIDR" : {
      "Type" : "String",
      "Description" : "CIDR for VPC. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x."
    },

    "CIDRdmzA" : {
      "Type" : "String",
      "Description" : "CIDR for DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },

    "CIDRdmzB" : {
      "Type" : "String",
      "Description" : "CIDR for second DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },

    "CIDRdmzC" : {
      "Type" : "String",
      "Description" : "CIDR for third DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },

    "CIDRprivA" : {
      "Type" : "String",
      "Description" : "CIDR for Private network A. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },

    "CIDRprivB" : {
      "Type" : "String",
      "Description" : "CIDR for Private network B. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },

    "CIDRprivC" : {
      "Type" : "String",
      "Description" : "CIDR for Private network C. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    }

  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-515a1a61", "HVMG2" : "ami-515a1a61"  },
      "us-west-2"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-515a1a61", "HVMG2" : "ami-515a1a61"  },
      "us-west-1"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-515a1a61", "HVMG2" : "ami-515a1a61"  },
      "eu-west-1"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
      "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
      "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
      "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
      "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
      "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
      "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "CIDR"},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "DMZ" },
          { "Key" : "Name", "Value" : { "Ref" : "VPCName"} }
        ]
      }
    },

    "SubnetdmzA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZoneA" },
        "CidrBlock" : { "Ref" : "CIDRdmzA" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "dmz-A"  },
          { "Key" : "Tier", "Value" : "dmz" }
        ]
      }
    },

    "SubnetdmzB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZoneB" },
        "CidrBlock" : { "Ref" : "CIDRdmzB" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "dmz-B"  },
          { "Key" : "Tier", "Value" : "dmz" }
        ]
      }
    },

    "SubnetdmzC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZoneC" },
        "CidrBlock" : { "Ref" : "CIDRdmzC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "dmz-C"  },
          { "Key" : "Tier", "Value" : "dmz" }
        ]
      }
    },

    "SubnetprivA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZoneA" },
        "CidrBlock" : { "Ref" : "CIDRprivA" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "private-A"  },
          { "Key" : "Tier", "Value" : "private" }
        ]
      }
    },

    "SubnetprivB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZoneB" },
        "CidrBlock" : { "Ref" : "CIDRprivB" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "private-B"  },
          { "Key" : "Tier", "Value" : "private" }
        ]
      }
    },

    "SubnetprivC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZoneC" },
        "CidrBlock" : { "Ref" : "CIDRprivC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "private-C"  },
          { "Key" : "Tier", "Value" : "private" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Tier", "Value" : "dmz" }
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "DMZRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "DMZRouteTable"  },
          { "Key" : "Tier", "Value" : "dmz" }
        ]
      }
    },

    "DMZRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "DMZRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "dmzASubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetdmzA" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },

    "dmzBSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetdmzB" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },

    "dmzCSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetdmzC" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    }
  },

  "Outputs" : {
    "VPCId" : {
      "Description" : "VPCId of the newly created VPC",
      "Value" :  { "Ref" : "VPC" }
    }
  }
}
