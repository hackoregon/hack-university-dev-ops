---
- name: make openvpn keys dir
  file: path=/etc/openvpn/keys owner=root mode=0755 state=directory

- name: make openvpn clients dir
  file: path=/etc/openvpn/clients owner=root mode=0755 state=directory

- name: make openvpn dirs
  file: path={{item}} state=directory mode=755
  with_items:
    - "/etc/openvpn/servers"
    - "/etc/openvpn/servers/{{vpn_name}}"
    - "/etc/openvpn/servers/{{vpn_name}}/ccd"
    - "/etc/openvpn/servers/{{vpn_name}}/bin"
    - "/etc/openvpn/servers/{{vpn_name}}/logs"

- name: create CA dir
  file: path=/etc/openvpn/keys/{{ca_name}} owner=root mode=0755 state=directory

- name: install ca.config for webmin
  template: src=templates/ca.config.j2
            dest=/etc/openvpn/keys/{{ca_name}}/ca.config

- name: install openvpn
  apt: name=openvpn state=latest

- name: write openvpn vars
  template: src=templates/ssl.vars.j2
            dest=/etc/openvpn/vars

- name: write openvpn-ssl.cnf
  template: src=templates/openvpn-ssl.cnf.j2
            dest=/etc/openvpn/openvpn-ssl.cnf

- stat: path=/etc/openvpn/keys/{{ca_name}}/dh2048.pem
  register: dh

- stat: path=/etc/openvpn/keys/{{ca_name}}/ca.pem
  register: ca

- stat: path=/etc/openvpn/keys/{{ca_name}}/{{vpn_name}}ServerKey.crt
  register: sk

- stat: path=/etc/openvpn/keys/{{ca_name}}/crl.pem
  register: crl

- stat: path=/etc/openvpn/servers/{{vpn_name}}/ta.key
  register: ta

- name: generate DH params... may take a while
  command: /usr/bin/openssl dhparam -out /etc/openvpn/keys/{{ ca_name }}/dh2048.pem 2048
  when: not dh.stat.exists

- name: make certificate authority
  shell: . /etc/openvpn/vars && openssl req -batch -days 3650 -nodes -new -x509 -keyout /etc/openvpn/keys/{{ca_name}}/ca.key -out /etc/openvpn/keys/{{ca_name}}/ca.crt -config /etc/openvpn/openvpn-ssl.cnf
  when: not ca.stat.exists

- name: convert ca.crt to ca.pem
  shell: . /etc/openvpn/vars && /usr/bin/openssl x509 -in /etc/openvpn/keys/{{ca_name}}/ca.crt -out /etc/openvpn/keys/{{ca_name}}/ca.pem -outform PEM
  when: not ca.stat.exists

- name: initialize {{ca_name}} serial
  lineinfile: dest=/etc/openvpn/keys/{{ca_name}}/serial
              line="01"
              state=present
              create=true
  changed_when: False

- name: initialize {{ca_name}}
  file: path=/etc/openvpn/keys/{{ca_name}}/index.txt state=touch
  changed_when: False

- name: make crl
  shell: . /etc/openvpn/vars && openssl ca -gencrl -keyfile /etc/openvpn/keys/{{ca_name}}/ca.key -cert /etc/openvpn/keys/{{ca_name}}/ca.crt -out /etc/openvpn/keys/{{ca_name}}/crl.pem -config /etc/openvpn/openvpn-ssl.cnf
  when: not crl.stat.exists

- name: request serverkey
  shell: . /etc/openvpn/vars && export KEY_CN={{vpn_name}}ServerKey && openssl req -days 3650 -batch -new -keyout /etc/openvpn/keys/{{ca_name}}/{{vpn_name}}ServerKey.key -out /etc/openvpn/keys/{{ca_name}}/{{vpn_name}}ServerKey.csr -nodes -extensions server -config /etc/openvpn/openvpn-ssl.cnf
  when: not sk.stat.exists

- name: sign serverkey
  shell: . /etc/openvpn/vars && openssl ca -days 3650 -batch -out /etc/openvpn/keys/{{ca_name}}/{{vpn_name}}ServerKey.crt -in /etc/openvpn/keys/{{ca_name}}/{{vpn_name}}ServerKey.csr -extensions server -config /etc/openvpn/openvpn-ssl.cnf
  when: not sk.stat.exists

- name: make {{vpn_name}}ServerKey.server for webmin
  lineinfile: dest=/etc/openvpn/keys/{{ca_name}}/{{vpn_name}}ServerKey.server
              line="Do not remove this file. It will be used from webmin OpenVPN Administration interface."
              state=present
              create=true

- name: make ta
  shell: openvpn --genkey --secret /etc/openvpn/servers/{{vpn_name}}/ta.key
  when: not ta.stat.exists

- name: install {{vpn_name}}.conf
  template: src=templates/openssl-server.conf.j2
            dest=/etc/openvpn/{{vpn_name}}.conf
  notify:
  - restart openvpn

- name: ensure openvpn is running (and enable it at boot)
  service: name=openvpn state=started enabled=yes
